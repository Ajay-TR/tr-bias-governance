{"ResumeParserData": {"ResumeFileName": "Prathvi_Singh.pdf", "ResumeLanguage": {"Language": "English", "LanguageCode": "en"}, "ParsingDate": "13/04/2024 10:19:33", "ResumeCountry": {"Country": "India", "Evidence": "PresentAddress", "CountryCode": {"IsoAlpha2": "IN", "IsoAlpha3": "IND", "UNCode": "356"}}, "Name": {"FullName": "PRATHVI SINGH", "TitleName": "", "FirstName": "PRATHVI", "MiddleName": "", "LastName": "SINGH", "FormattedName": "Prathvi Singh", "ConfidenceScore": 10}, "DateOfBirth": "16/06/1993", "Gender": "Male", "FatherName": "", "MotherName": "", "MaritalStatus": "Single", "Nationality": "Indian", "LanguageKnown": [{"Language": "English", "LanguageCode": "en"}, {"Language": "Hindi", "LanguageCode": "hi"}], "UniqueID": "", "LicenseNo": "", "PassportDetail": {"PassportNumber": "", "DateOfExpiry": "", "DateOfIssue": "", "PlaceOfIssue": ""}, "PanNo": "", "VisaStatus": "", "Email": [{"EmailAddress": "prathvi16.ps@gmail.com", "ConfidenceScore": 10}], "PhoneNumber": [{"Number": "9837329588", "ISDCode": "", "OriginalNumber": "098373 29588", "FormattedNumber": "098373 29588", "Type": "Phone", "ConfidenceScore": 10}], "WebSite": [{"Type": "", "Url": ""}], "Address": [{"Street": "YC-468, Anandam NTPC SAS LTD", "City": "GREATER NOIDA", "State": "Uttar Pradesh", "StateIsoCode": "IN-UP", "Country": "India", "CountryCode": {"IsoAlpha2": "IN", "IsoAlpha3": "IND", "UNCode": "356"}, "ZipCode": "", "FormattedAddress": "YC-468 Anandam NTPC SAS LTD, GREATER NOIDA", "Type": "Present", "ConfidenceScore": 7}], "Category": "Information", "SubCategory": "Software Developers and Programmers", "CurrentSalary": {"Amount": "", "Symbol": "", "Currency": "", "Unit": "", "Text": ""}, "ExpectedSalary": {"Amount": "", "Symbol": "", "Currency": "", "Unit": "", "Text": ""}, "Qualification": "B.Tech (PTU) in CSE \t 75% \t 2018\r\r\r\r\rDIPLOMA PSBTE) in IT \t 70% \t 2015 \r 10TH (CBSE) \t 68% \t 2010", "SegregatedQualification": [{"Institution": {"Name": "PTU", "Type": "University", "ConfidenceScore": 10, "Location": {"City": "", "State": "", "StateIsoCode": "", "Country": "", "CountryCode": {"IsoAlpha2": "", "IsoAlpha3": "", "UNCode": ""}}}, "Degree": {"DegreeName": "B.Tech", "NormalizeDegree": "Bachelor of Technology", "Specialization": [], "ConfidenceScore": 10}, "FormattedDegreePeriod": "2018", "StartDate": "", "EndDate": "31/12/2018", "Aggregate": {"Value": "75", "MeasureType": "Percentage"}}, {"Institution": {"Name": "PSBTE", "Type": "Institute", "Location": {"City": "", "State": "", "StateIsoCode": "", "Country": "", "CountryCode": {"IsoAlpha2": "", "IsoAlpha3": "", "UNCode": ""}}, "ConfidenceScore": 10}, "Degree": {"DegreeName": "DIPLOMA", "NormalizeDegree": "DIPLOMA", "Specialization": [], "ConfidenceScore": 10}, "FormattedDegreePeriod": "2015", "StartDate": "", "EndDate": "31/12/2015", "Aggregate": {"Value": "70", "MeasureType": "Percentage"}}, {"Institution": {"Name": "CBSE", "Type": "Board", "ConfidenceScore": 10, "Location": {"City": "", "State": "", "StateIsoCode": "", "Country": "", "CountryCode": {"IsoAlpha2": "", "IsoAlpha3": "", "UNCode": ""}}}, "Degree": {"DegreeName": "Class X", "NormalizeDegree": "Secondary School Certificate", "Specialization": [], "ConfidenceScore": 10}, "FormattedDegreePeriod": "2010", "StartDate": "", "EndDate": "31/12/2010", "Aggregate": {"Value": "68", "MeasureType": "Percentage"}}], "Certification": "", "SegregatedCertification": [], "SkillBlock": "\u2022\r\r\r\r\r\u2022 WEB TECHNOLOGIES \r \u2022 FRAME WORK \r \u2022 IDE", "SkillKeywords": "Decision Making,Analysis,Machine Learning Algorithms,Employee Monitoring,Logistic Regression,Client Requirement,Data Manipulation,Linear Regression,Data Preparation,Face Recognition,Machine Learning,WEB TECHNOLOGIES,Coding Standard,Beautiful Soup,Decision Trees,Elastic Search,Search Engines,Data Analysis,Random Forest,Scikit Learn,JAVA SCRIPT,MatplotLib,Adaboost,Big Data,Selenium,Git Lab,PYCHARM,DJANGO,Opencv,Pandas,Python,Flask,Numpy,HTML,JAVA,Rest,API,CSS,DNS,PCA", "SegregatedSkill": [{"Type": "SoftSkill", "Skill": "Decision Making", "Ontology": "Management of Companies and Enterprises>Top Executives>Decision Making", "Alias": "Ability To Make Decisions, Ability To Take Decisions, Business Decision Making, Decision Maker, Decision Making Skills, Decision-Making, decision-making skills, decisionmaking, Made decisions independently, Make A Decision, make decisions, makes appropriate decisions, Makes Decisions, Making A Decision, making choices, Making Decisions, making skills, strategic decision making, Strategic Decision-Making, Strong Decision Maker, Take Decisions", "FormattedName": "Decision Making", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "SoftSkill", "Skill": "Analysis", "Ontology": "Management of Companies and Enterprises>Managers, All Other>Analysis", "Alias": "analysing, Conduct Analysis, Examination, Examination Procedures, examinations", "FormattedName": "Analysis", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Machine Learning Algorithms", "Ontology": "Information>Operations Research Analysts>Machine Learning", "Alias": "algorithm in data mining, analytics machine learning, Data Mining Algorithm, Data Mining-Algorithm, Feature Learning, intelligent retrieval, machine learning algorithms, Machine learning analytics, Machine Learning Methods, Machine Learning Operations, Machine Learning Workflow, Machine Technology, Machine-Learning, ML, Mlops", "FormattedName": "Machine Learning", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Employee Monitoring", "Ontology": "Finance and Insurance>Human Resources Specialists>Employee Monitoring", "Alias": "Control of employees, Controlling Employees, Employee Control, Employee Performance Monitoring, Employee Productivity Monitoring, Employee Productivity Tracking, employee surveillance, Employee tracking, Employee-Control, Employee-Monitoring, Monitor Employee Productivity, Monitor the productivity level of work force, monitoring employee data, Monitoring of Employer, Monitoring Of Hr Processes, oversight of staffing, staffing oversight, Workforce Monitoring, Workplace Surveillance", "FormattedName": "Employee Monitoring", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Logistic Regression", "Ontology": "Administrative and Support and Waste Management and Remediation Services>Statistical Assistants>Logistic Regression", "Alias": "Design Logistic Regression, Estimating Logistics, Logistic estimate, logistic model, Logistic-Regression, Logistics Estimation, Logistics Regression Analysis, Logistics Regression Models, Logistics-Regression Analysis, Logistics-Regression Models, Logistics-Regression-Analysis, Logistics-Regression-Models", "FormattedName": "Logistic Regression", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Client Requirement", "Ontology": "Administrative and Support and Waste Management and Remediation Services>Customer Service Representatives>Client Requirements", "Alias": "Client requirement, Client Requirements Rendering, Client specifications, Customer Requirements, customers requirements, Meet Customer Requirements, requirements of the customer, translate customer requirement into competitive solutions", "FormattedName": "Client Requirements", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Data Manipulation", "Ontology": "Administrative and Support and Waste Management and Remediation Services>Data Entry Keyers>Data Editing", "Alias": "Data Manipulation, Data Modification, Data-Editing, interactive editing, Manipulating Data, Massive Data Manipulation, Statistical Data Editing", "FormattedName": "Data Editing", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Linear Regression", "Ontology": "Information>Statisticians>Linear Regression", "Alias": "Linear Regression Analysis, Linear Regression Model, Ordinary Least Squares, Ordinary Least Squares regression, Ordinary Least Squares technique, Simple Linear Regression", "FormattedName": "Linear Regression", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Data Preparation", "Ontology": "Information>Data Processing, Hosting, and Related Services>Data Preparation", "Alias": "Data Pre processing, data pre-processing, Data Preparation Process, Data Preparing, Data Preprocessing, data production, Data-Preparation, Data-Preprocessing, generate data, generating data, generation of data, perform data pre-processing, Pre Processing, Pre-Processing, preparation of data, preparation of the data, prepare data, preparing data, produce data", "FormattedName": "Data Preparation", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Face Recognition", "Ontology": "Arts, Entertainment, and Recreation>Photographers>Facial Recognition", "Alias": "Face detection, Face recognition, Facial-Recognition", "FormattedName": "Facial Recognition", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Machine Learning", "Ontology": "Information>Operations Research Analysts>Machine Learning", "Alias": "algorithm in data mining, analytics machine learning, Data Mining Algorithm, Data Mining-Algorithm, Feature Learning, intelligent retrieval, machine learning algorithms, Machine learning analytics, Machine Learning Methods, Machine Learning Operations, Machine Learning Workflow, Machine Technology, Machine-Learning, ML, Mlops", "FormattedName": "Machine Learning", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "WEB TECHNOLOGIES", "Ontology": "Information>Software Developers and Programmers>Web Technology", "Alias": "new web technologies, technologies web, web based technologies, Web Technologies, web-technologies, Web-Technology", "FormattedName": "Web Technology", "Evidence": "SkillSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Coding Standard", "Ontology": "Information>Software Developers and Programmers>Coding Standards", "Alias": "Code standards, Coding Best Practices, Coding Conventions, coding guidelines, Coding Specification, Coding Standard, Coding Standards and Guidelines, Follow coding guidelines, Practices Coding, Software Coding Standards", "FormattedName": "Coding Standards", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Beautiful Soup", "Ontology": "Information>Software Developers, Applications>Beautiful Soup", "Alias": "beautiful soup 4, beautiful soup 4.11.1, Beautiful Soup 4.4.0, Beautiful Soup 4.9.0, Beautiful Soup library, beautifulsoup", "FormattedName": "Beautiful Soup", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Decision Trees", "Ontology": "Information>Database and Systems Administrators and Network Architects>Decision Tree", "Alias": "classification tree, Decision Tree Framework, Decision Tree Implementation, Decision Tree tool, decision trees, Decision-Tree, reduction tree, regression tree", "FormattedName": "Decision Tree", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Elastic Search", "Ontology": "Information>Database and Systems Administrators and Network Architects>ElasticSearch", "Alias": "Amazon Elasticsearch Service, Apache Elastic Search, Apache Elasticsearch, elastic, elastic architecture, Elastic ELK Stack, elastic framework, Elastic Search, elastic search clusters, elastic search databases, elastic search design, elastic search framework, elastic search infrastructure, elastic search integration, elastic search interfaces, Elasticsearch 7.0.0, Elasticsearch 7.1.0, Elasticsearch 7.1.1, Elasticsearch 7.10.0, Elasticsearch 7.10.1, Elasticsearch 7.10.2, Elasticsearch 7.11.0, Elasticsearch 7.11.1, Elasticsearch 7.11.2, Elasticsearch 7.12.0, Elasticsearch 7.12.1, Elasticsearch 7.13.0, Elasticsearch 7.13.1, Elasticsearch 7.13.2, Elasticsearch 7.14.0, Elasticsearch 7.14.1, Elasticsearch 7.14.2, Elasticsearch 7.15.0, Elasticsearch 7.15.1, Elasticsearch 7.15.2, Elasticsearch 7.16.0, Elasticsearch 7.16.1, Elasticsearch 7.16.2, Elasticsearch 7.16.3, Elasticsearch 7.2.0, Elasticsearch 7.2.1, Elasticsearch 7.3.0, Elasticsearch 7.3.1, Elasticsearch 7.3.2, Elasticsearch 7.4.0, Elasticsearch 7.4.1, Elasticsearch 7.4.2, Elasticsearch 7.5.0, Elasticsearch 7.5.1, Elasticsearch 7.5.2, Elasticsearch 7.6.0, Elasticsearch 7.6.1, Elasticsearch 7.6.2, Elasticsearch 7.7.0, Elasticsearch 7.7.1, Elasticsearch 7.8.0, Elasticsearch 7.8.1, Elasticsearch 7.9.0, Elasticsearch 7.9.1, Elasticsearch 7.9.2, Elasticsearch 7.9.3, Elasticsearch Architecture, Elasticsearch Architectures, Elasticsearch Cluster, Elasticsearch clusters, Elasticsearch Etl Process, Elasticsearch Framework, elasticsearch infrastructure, elasticsearch integration, elasticsearch operations, Elasticsearch Search Engine Technology, Elasticsearch Search Engines, Elasticsearch Search Server, Elasticsearch Server, ElasticSearch Software, ElasticSearch tool, Elasticsearch version 7.0.0, Elasticsearch version 7.1.0, Elasticsearch version 7.1.1, Elasticsearch version 7.10.0, Elasticsearch version 7.10.1, Elasticsearch version 7.10.2, Elasticsearch version 7.11.0, Elasticsearch version 7.11.1, Elasticsearch version 7.11.2, Elasticsearch version 7.12.0, Elasticsearch version 7.12.1, Elasticsearch version 7.13.0, Elasticsearch version 7.13.1, Elasticsearch version 7.13.2, Elasticsearch version 7.14.0, Elasticsearch version 7.14.1, Elasticsearch version 7.14.2, Elasticsearch version 7.15.0, Elasticsearch version 7.15.1, Elasticsearch version 7.15.2, Elasticsearch version 7.16.0, Elasticsearch version 7.16.1, Elasticsearch version 7.16.2, Elasticsearch version 7.16.3, Elasticsearch version 7.2.0, Elasticsearch version 7.2.1, Elasticsearch version 7.3.0, Elasticsearch version 7.3.1, Elasticsearch version 7.3.2, Elasticsearch version 7.4.0, Elasticsearch version 7.4.1, Elasticsearch version 7.4.2, Elasticsearch version 7.5.0, Elasticsearch version 7.5.1, Elasticsearch version 7.5.2, Elasticsearch version 7.6.0, Elasticsearch version 7.6.1, Elasticsearch version 7.6.2, Elasticsearch version 7.7.0, Elasticsearch version 7.7.1, Elasticsearch version 7.8.0, Elasticsearch version 7.8.1, Elasticsearch version 7.9.0, Elasticsearch version 7.9.1, Elasticsearch version 7.9.2, Elasticsearch version 7.9.3, Search Engine Elastic Search, Search Engine Elasticsearch", "FormattedName": "ElasticSearch", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Search Engines", "Ontology": "Information>All Other Information Services>Search Engine", "Alias": "internet search engine, Internet search engine software, Search Engine Framework, Search Engine Technology, search engines, Search-Engine, Web Search, Web Search Engine, Web Search Engine Software, Web Search Technology", "FormattedName": "Search Engine", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Data Analysis", "Ontology": "Information>Computer and Information Research Scientists>Data Management>Data Analysis", "Alias": "Analyse data, analyse info processes, Analyse Information, analyse information process, Analyse Information Processes, analyses information, analyses of data, analysing information processes, Analysis Of Data, analysis of data and compilation, Analytics Data Services, Analyze Data, analyze data or facts, analyze information, analyze relevant information, Analyzed data, analyzes data, Analyzing and Interpreting Data, Analyzing Data, Analyzing Information, analyzing the data, assess facts, assess information, big data insight, check facts, Data Analysis and Interpretation, Data Analysis process, Data Analysis Strategy, Data Analysis Techniques, Data analysis test, Data Analysis-Techniques, Data Analytics, Data Evaluation, Data Insights, Data Investigation, data quality investigation, Data Review, Data-Analyse, Data-Analysis, Data-Analysis and Interpretation, Data-Analysis and-Interpretation, Data-Analysis Techniques, Data-Analysis- and Interpretation, Data-Analysis- Techniques, Data-Evaluation, Data-Insights, Data-Investigation, data-quality investigation, data-quality-investigation, Data-Review, evaluate facts, evaluate important information, evaluate info, Evaluate Information, evaluate information processes, evaluates information, evaluates information sources, Evaluating information, Evaluation of Data, examine information processes, Info Analytics, informatics analysis, Information Analysis, Information Analytics, Information-Analytics, informations analytics, informations-analytics, informative analysis, Insight Generation, Insight Generation Process, Insight- Generation, Insight-Generation, Insights into data, Massive Data Analysis, Numerous Data Analysis, Research Analysis, Review and Analyze Data, Review Data, Review information, review information processes, reviews information, Technical Data Analysis, technical Insights into data, Test Analysis Data, undertakes analyses of data, verify information", "FormattedName": "Data Analysis", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Random Forest", "Ontology": "Information>Database and Systems Administrators and Network Architects>Machine Learning>Random Forest", "Alias": "random decision forest, random decision forests, Random Forest Algorithm, Random Forest algorithms, Random Forests, Random-Forest, RandomForest software", "FormattedName": "Random Forest", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Scikit Learn", "Ontology": "Information>Statisticians>Data Analysis Software>Scikit-Learn", "Alias": "Scikit Learn, Scikit learn 0.20, scikit learn 0.21.3, scikit learn 1.0, scikit learn 1.0.2, Scikit-learn 0.20, scikit-learn 0.21.3, scikit-learn 0.24.2, scikit-learn 1.0, Scikit-Learn 1.0.0, Scikit-Learn 1.0.1, scikit-learn 1.0.2, Scikit-Learn ML, Scikit-Learn software, Scikit-Learn tool, Scikit-learn Version 1.0, Scikit-Learn Version 1.0.2, scikits.learn, sk learn, sklearn", "FormattedName": "Scikit-Learn", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "JAVA SCRIPT", "Ontology": "Information>Software Developers and Programmers>Programming Language>JavaScript", "Alias": "classic script, ECMAScript, ECMAScript 2015, ECMAScript 2016, ECMAScript 2017, ECMAScript 3, ECMAScript 4, ECMAScript 5, ECMAScript 6, ECMAScript lang., ECMAScript language, ECMAScript Programming language, ECMAScript scripting-language, ES Programming language, ES2015, ES2017, ES2018, ES2019, ES2020, ES2021, es6, java script, Java Script Programming, Java Script Programming Language, Java Scripting, JavaScript 1.0, JavaScript 1.1, JavaScript 1.2, javascript 1.3, Javascript Coding, Javascript ES6, JavaScript lang., JavaScript language, JavaScript Programming, JavaScript programming language, Javascript Scripting, Javascript Scripting Language, javascripting, JS language, js programming language, JScript, JScript 1.0, JScript 9.0, JScript computer lang., JScript computer language, JScript computer Programming lang., JScript computer Programming language, JScript language, JScript Programming, JScript Programming language, Live Script, LiveScript, Livescript 0.9.0, Livescript 0.9.1, Livescript 0.9.10, Livescript 0.9.11, Livescript 0.9.11B, Livescript 0.9.12, Livescript 0.9.2, Livescript 0.9.3, Livescript 0.9.4, Livescript 0.9.5, Livescript 0.9.5B, Livescript 0.9.5C, Livescript 0.9.6, Livescript 0.9.7, Livescript 0.9.8, Livescript 0.9.8B, Livescript 0.9.8C, Livescript 0.9.9, Livescript 1.0.0, Livescript 1.0.1, Livescript 1.1.0, Livescript 1.1.1, Livescript 1.2.0, Livescript 1.3.0, Livescript 1.3.1, Livescript 1.6.0, Livescript 1.6.1, LiveScript language, LiveScript Programming language, Microsoft JScript, ms JScript, Oracle Javascript, Programming Javascript, Programming Language Javascript, Scripting Javascript, Scripting Language Javascript", "FormattedName": "JavaScript", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "MatplotLib", "Ontology": "Information>Software Developers, Applications>Python>Matplotlib", "Alias": "mat plot lib, matplotlib 0.63.0, matplotlib 0.64, matplotlib 0.87.5, matplotlib 0.87.7, matplotlib 0.98, matplotlib 0.98.0, matplotlib 0.98.5.1, matplotlib 0.99.3, Matplotlib 1.2, Matplotlib 1.3.1, Matplotlib 1.4, matplotlib 1.5.3, Matplotlib 2.1.0, Matplotlib 2.1.1\\u200E, matplotlib 3.0.0, matplotlib 3.3.0, matplotlib 3.3.2, matplotlib 3.3.4, matplotlib 3.4, matplotlib 3.4.1, matplotlib 3.4.2, matplotlib 3.4.3, matplotlib 3.5.0, Matplotlib 3.5.1, Matplotlib library, \\u200EMatplotlib 1.1.1", "FormattedName": "Matplotlib", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Adaboost", "Ontology": "Information>Statisticians>Machine Learning>AdaBoost", "Alias": "Adaptive Boosting, Adaptive Boosting Algorithm, Additive Modeling", "FormattedName": "AdaBoost", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Big Data", "Ontology": "Information>Database and Systems Administrators and Network Architects>Big Data", "Alias": "Big Data Cloud, Big Data Databases, Big Data Operations, Big Data Production, Big Data Programming, Big Data Solutions, Big Data Technologies, Big Data Technology, Big Data Technology Operations, Big-Data, BigData, Bigdata Operations, Manage A Huge Amount, Massive Big Data, Massive Data Sets, Massive Datasets, Massive-Data-Sets, Massive-Datasets", "FormattedName": "Big Data", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Selenium", "Ontology": "Information>Software Quality Assurance Analysts and Testers>Selenium", "Alias": "script selenium, Selenium  2, Selenium 1, selenium 2.53, Selenium 3, Selenium 4.0.0, Selenium Automation Framework, Selenium Frame Work, Selenium Framework, Selenium Framework 4.0.0, Selenium Framework Design, Selenium Framework Development, Selenium IDE, Selenium Recorder, Selenium script, Selenium Server, Selenium Soft., Selenium Software, selenium test, selenium testing, Selenium Tool, Selenium Wd, selenium web driver, selenium web-driver, Selenium Web-Driver 3, Selenium WebDriver, Selenium WebDriver soft., Selenium WebDriver Software, Selenium WebDriver tool, Selenium-Framework, Selenium-Grid, Selenium-IDE, seleniumhq, test selenium, Webdriver, webdriver automation, Webdriver Framework, WebDriver Selenium", "FormattedName": "Selenium", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Git Lab", "Ontology": "Information>Software Developers, Applications>GitLab", "Alias": "Git Lab, Git Lab 13.11, Git Lab 13.12, Git Lab 14.0, Git Lab 14.1, Git Lab 14.2, Git Lab 14.3, Git Lab 14.4, Git Lab 14.5, Git Lab software, Git Lab13.10, GitLab 13.10, GitLab 13.11, GitLab 13.12, GitLab 14.0, GitLab 14.1, GitLab 14.2, GitLab 14.3, GitLab 14.4, GitLab 14.5, GitLab 14.6. 1, GitLab soft., GitLab software", "FormattedName": "GitLab", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "PYCHARM", "Ontology": "Information>Software Developers, Applications>PyCharm", "Alias": "Py Charm, PyCharm 1.1.1, PyCharm 1.2.1, PyCharm 1.5.4, PyCharm 2.0.2, PyCharm 2.5.2, PyCharm 2.6.3, PyCharm 2.7.4, PyCharm 2016.1, PyCharm 2016.1.5, PyCharm 2016.2, PyCharm 2016.2.3, PyCharm 2016.3, PyCharm 2017.1, PyCharm 2017.2, PyCharm 2017.3, PyCharm 2018.1, PyCharm 2018.2, PyCharm 2018.3, PyCharm 2019.1, PyCharm 2019.2, PyCharm 2019.3, PyCharm 2020.1, PyCharm 2020.2, PyCharm 2020.3, PyCharm 2021.1, PyCharm 2021.2, PyCharm 2021.3, PyCharm 2021.3.2, PyCharm 3, PyCharm 3.0.3, PyCharm 3.1, PyCharm 3.1.4, PyCharm 3.4, PyCharm 3.4.4, PyCharm 4, PyCharm 4.0.7, PyCharm 4.5, PyCharm 4.5.5, PyCharm 5, PyCharm 5.0.6, PyCharm software, PyCharm tool, PyCharm\u00a02016.3", "FormattedName": "PyCharm", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "DJANGO", "Ontology": "Information>Software Developers, Applications>Web Framework>Django", "Alias": "Django 0.90, Django 0.91, Django 0.95, Django 0.96, Django 1.0, Django 1.1, Django 1.11, Django 1.2, Django 1.3, Django 1.5, Django 1.6, Django 1.7, Django 1.9, Django 2.0, Django 2.1, django 3.1, Django 3.2, Django 4.0, Django 5.0, Django Ecommerce, Django Framework, Django ORM, Django soft., Django software, Django Web Framework", "FormattedName": "Django", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Opencv", "Ontology": "Arts, Entertainment, and Recreation>Graphic Designers>OpenCV", "Alias": "Open source computer vision, Open Source Computer Vision Library, OpenCV 2.3.0, OpenCV 2.4.10, OpenCV 2.4.11, OpenCV 2.4.12, OpenCV 2.4.13, OpenCV 2.4.13.2, OpenCV 2.4.13.3, OpenCV 2.4.13.4, OpenCV 2.4.13.5, OpenCV 2.4.13.6, OpenCV 3.0.0, OpenCV 3.1.0, OpenCV 3.2.0, OpenCV 3.3.0, OpenCV 3.3.1, OpenCV 3.4.0, OpenCV 3.4.1, OpenCV 3.4.10, OpenCV 3.4.11, OpenCV 3.4.12, OpenCV 3.4.13, OpenCV 3.4.14, OpenCV 3.4.2, OpenCV 3.4.3, OpenCV 3.4.4, OpenCV 3.4.5, OpenCV 3.4.6, OpenCV 3.4.7, OpenCV 3.4.8, OpenCV 3.4.9, OpenCV 4.0.0, OpenCV 4.0.1, OpenCV 4.1.0, OpenCV 4.1.1, OpenCV 4.1.2, OpenCV 4.2.0, OpenCV 4.3.0, OpenCV 4.4.0, OpenCV 4.5.0, OpenCV 4.5.1, OpenCV 4.5.3, OpenCV 4.5.4, OpenCV 4.5.5, Opencv Python, OpenCV soft, OpenCV software, OpenCV tool, Opencv-Python, Python OpenCV, software OpenCV", "FormattedName": "OpenCV", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Pandas", "Ontology": "Information>Database and Systems Administrators and Network Architects>pandas", "Alias": "pandas 0.25, Pandas 1.0, pandas 1.0.0, Pandas 1.4, Pandas 1.4.0, pandas 1.4.1, pandas 1.5.2, Pandas Framework, Pandas Python Package, pandas software, Pandas Version 1.0, Python Pandas", "FormattedName": "pandas", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Python", "Ontology": "Information>Software Developers and Programmers>Programming Language>Python", "Alias": "C Python, Coding Python, CPython, Jython, Jython language, Jython Programming language, Programming Language Python, Programming Python, Python 0.9.0, Python 0.9.1, Python 0.9.2, Python 0.9.4, Python 0.9.6, Python 0.9.8, Python 0.9.9, Python 1.0, Python 1.0.0, Python 1.0.2, Python 1.0.3, Python 1.0.4, Python 1.1, Python 1.1.1, Python 1.2, Python 1.3, Python 1.4, Python 1.5, Python 1.5.2, Python 1.6, python 2.0, Python 2.0.1, python 2.1, Python 2.1.1, Python 2.1.2, Python 2.1.3, python 2.2, Python 2.2.1, Python 2.2.2, Python 2.2.3, Python 2.2p1, python 2.3, Python 2.3.1, Python 2.3.2, Python 2.3.3, Python 2.3.4, Python 2.3.5, python 2.4, Python 2.4.1, Python 2.4.2, Python 2.4.3, Python 2.4.4, python 2.5, Python 2.5.1, Python 2.5.2, Python 2.5.3, Python 2.5.4, python 2.6, Python 2.6.1, Python 2.6.2, Python 2.6.3, Python 2.6.4, Python 2.6.5, Python 2.6.6, Python 2.6.7, Python 2.6.8, Python 2.6.9, python 2.7, Python 2.7.0, Python 2.7.1, Python 2.7.10, Python 2.7.11, Python 2.7.12, Python 2.7.13, Python 2.7.14, Python 2.7.15, Python 2.7.16, Python 2.7.17, Python 2.7.2, Python 2.7.3, Python 2.7.4, Python 2.7.5, Python 2.7.6, Python 2.7.7, Python 2.7.8, Python 2.7.9, python 3.0, Python 3.0.1, python 3.1, Python 3.1.1, Python 3.1.2, Python 3.1.3, Python 3.1.4, Python 3.1.5, python 3.2, Python 3.2.1, Python 3.2.2, Python 3.2.3, Python 3.2.4, Python 3.2.5, Python 3.2.6, python 3.3, Python 3.3.0, Python 3.3.1, Python 3.3.2, Python 3.3.3, Python 3.3.4, Python 3.3.5, Python 3.3.6, Python 3.3.7, python 3.4, Python 3.4.0, Python 3.4.1, Python 3.4.10, Python 3.4.2, Python 3.4.3, Python 3.4.4, Python 3.4.5, Python 3.4.6, Python 3.4.7, Python 3.4.8, Python 3.4.9, python 3.5, Python 3.5.0, Python 3.5.1, Python 3.5.2, Python 3.5.3, Python 3.5.4, Python 3.5.5, Python 3.5.6, Python 3.5.7, Python 3.5.8, python 3.6, Python 3.6.0, Python 3.6.1, Python 3.6.10, Python 3.6.2, Python 3.6.3, Python 3.6.4, Python 3.6.5, Python 3.6.6, Python 3.6.7, Python 3.6.8, Python 3.6.9, Python 3.7.0, Python 3.7.1, Python 3.7.2, Python 3.7.3, Python 3.7.4, Python 3.7.5, Python 3.7.6, Python 3.7.7, Python 3.8, Python 3.8.0, Python 3.8.1, Python 3.8.2, Python 3.9, Python Application Programming, Python Basic Programming, Python Code Programming, Python Computer Language, Python Development Programming, Python Programming, Python programming lang., Python programming language", "FormattedName": "Python", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Flask", "Ontology": "Information>Software Developers and Programmers>Web Framework>Flask Framework", "Alias": "Apache Flask, Flask, Flask 0.3.1, Flask 0.5, Flask 0.6, Flask 1.1, Flask 2.0, Flask 2.0.3, Flask 2.2.2, Flask API, Flask Frame Work, Flask Web Framework, Flask-Python, python flask, Python Flask Framework", "FormattedName": "Flask Framework", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Numpy", "Ontology": "Information>Software Developers, Applications>Programming Language>NumPy", "Alias": "Numpy 1.0, NumPy 1.14.0, NumPy 1.15.0, NumPy 1.16.0, Numpy 1.16.6, NumPy 1.17.0, NumPy 1.17.5, NumPy 1.18.0, NumPy 1.18.4, NumPy 1.19, NumPy 1.19.0, NumPy 1.19.5, NumPy 1.20, NumPy 1.20.0, NumPy 1.20.3\u00a0, NumPy 1.21.0, NumPy 1.21.5, NumPy 1.22, NumPy 1.22.0, NumPy 1.22.1, NumPy 1.22.2, NumPy 1.22.2\u00a0, NumPy 1.22.3, NumPy 1.22.5, numpy 1.24.1, NumPy v1.22, NumPy v1.24, \\u200ENumpy 1.18.1", "FormattedName": "NumPy", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "HTML", "Ontology": "Information>Software Developers and Programmers>Programming Language>Hypertext Markup Language", "Alias": "Chtml, Chtml Markup Languages, Coding HTML, Compact HyperText Markup Language, Extensible Hypertext Markup Language, Extensible-Hypertext-Markup-Language, HTML, HTML 1.0, HTML 2, HTML 2.0, HTML 3.2, html 4.0, html 4.0.1, HTML 4.01, html 5, HTML 5 Coding, Html 5 Framework, Html 5 Programming, HTML Coding, HTML Markup Language, Html Programming, HTML Programming Language, HTML version 2.0, HTML-5, html4, html4.0, HTML5, html5 framework, HTML5 Programming, HyperText Markup, Hypertext Markup Lang., Hypertext-Markup-Language, Programming Language Html, Web HTML, Web Markup Language, XHTML, Xhtml Coding, XHTML Computer lang., XHTML Computer language, Xhtml Programming, XHTML Programming lang., XHTML Programming language", "FormattedName": "Hypertext Markup Language", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "JAVA", "Ontology": "Information>Software Developers and Programmers>Programming Language>Java", "Alias": "Advance Java, Advance Java Programming, core java, Core Java Programming, core-java, corejava, Embedded Java, Java 1, Java 1.2, Java 1.4, Java 1.5, Java 10, Java 11, Java 17, Java 18, Java 2, Java 2 Advanced Programming, Java 2 Programming, java 2.0, Java 3, Java 4, Java 5, java 5.0, Java 6, Java 7, Java 8, Java 8 Programming, Java 9, java application, Java Basic Programming, Java Coding, Java Dev Language, Java Development, Java Development Lang., Java Development Language, Java Platform, Java Platform Language, Java programming, Java Programming Language, Java Tech., java technologies, Java Technology, java1, Java1.3, Java1.4, Java5, Java8, Microsoft Java Technologies, Ms Java Technologies, Oracle Java, PersonalJava, Personaljava Software, PersonalJava technology, Pjava, programming core java, programming corejava, Programming Language Java, Sun Java", "FormattedName": "Java", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "Rest", "Ontology": "Information>Software Developers and Programmers>Software Architecture>Representational State Transfer", "Alias": "API REST, API Restful, develop a rest apis, Develop Restful Web Services, Developing Rest Web Services, representational state transfer rest, Representational State-Transfer, Representational-State Transfer, Representational-State-Transfer, REST, rest api, rest api code design, rest api design, rest api design and development, rest api development, rest api development and design, rest api development and maintenance, rest api driven design, Rest Api Framework, rest apis development, rest app development, rest application design, Rest Frame Work, Rest Framework, Rest Server, REST services, Rest Web Server, Rest Web Services, rest webservices, Rest-Framework, RESTful API, RESTful API design, restful api design and development, restful api design and implementation, restful api design architecture, restful api development and maintenance, Restful Apis, restful architecture, Restful Server, Restful Service, Restful Service Server, Restful Services, Restful Web Server, restful web service, Restful Web Services, Restful Web Services Framework, restful webservices, RESTful-API, restfull webservice, restservices, wcf rest, webservices restful", "FormattedName": "Representational State Transfer", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "API", "Ontology": "Information>Software Developers and Programmers>Application Programming Interface", "Alias": "API, API Development, API Framework, Api Integration, API-Development, apis development, Application program interface, Application program interface Development, Application Programming, Application Programming Interface Development, Application Programming Interface Integration, application programming interfaces, Application-Programming, Application-Programming Interface, Application-Programming-Interface, applications programming, bapi development, bapi processing, Bapi Programming, Business Application Interface, Business Application Programming, Business Application Programming Interface, Business Application Programming-Interface, Developing APIs, Framework Api, interface applications, programming interface, Software Interface", "FormattedName": "Application Programming Interface", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "CSS", "Ontology": "Information>Software Developers and Programmers>Programming Language>Cascading Style Sheet", "Alias": "Advanced CSS, Cascading Style Sheet 2.1, Cascading Style Sheet 4, Cascading Style Sheets, Cascading Style Sheets 1, Cascading Style Sheets 2, Cascading Style Sheets 3, CSS, css 2.0, CSS 2.1, CSS 3, CSS 4.15, CSS Codes, CSS1, css2, CSS3, css3.0, CSS4, Modular Css, Modular Css3, SCSS, Stylesheet Language", "FormattedName": "Cascading Style Sheet", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "DNS", "Ontology": "Information>Computer Network Architects>Domain Name System", "Alias": "DNS, dns administration, Dns Architecture, Dns Deployment, DNS Server, DNS-Server, domain name server protocol, domain name system management, Domain Name System Protocol, domain name system server, Domain Name-System, Domain-Name System, Domain-Name-System, microsoft dns, Microsoft Dns Server, Ms Dns Server, Server Dns", "FormattedName": "Domain Name System", "Evidence": "ProjectSection", "LastUsed": "", "ExperienceInMonths": 0}, {"Type": "OperationalSkill", "Skill": "PCA", "Ontology": "Information>Statisticians>Principal Component Analysis", "Alias": "analyze principal component, Component Analysis, investigation of parts, pca, Pca Design, pod analyse, POD Analysis, Principal Component analyse, Principal Component-Analysis, Principal-Component Analysis, Principal-Component-Analysis, Proper Orthogonal Decomposition, Proper Orthogonal Decomposition Analysis", "FormattedName": "Principal Component Analysis", "Evidence": "SummarySection", "LastUsed": "", "ExperienceInMonths": 0}], "Experience": "PYTHON, JAVA. : HTML, CSS, JAVA SCRIPT. : ANACONDA, DJANGO, OPENCV, SCIKIT LEARN, FLASK REST PLUS. : IDLE, JUPYTER NOTEBOOK, PYCHARM, ATOM. \r  \r \u2022\t  1.9 years job at SecNinjaz as Python Developer. \r \u2022\t  6 month job at Aadrila Technologies as Python Developer. \r \u2022\t  6 months industrial training on Python and Machine Learning from Ducat, Noida. \r \u2022\t  3 month training in JAVA Core from Techlive Solution, Mohali \r  \r ACCOMPLISHED PROJECTS \r 1.\t  Project : Face Recognition \r \t  Environment : Python,Machine Learning,SVM,PCA,Logistic Regression,OpenCV,Scikit Learn, Numpy, \r MatplotLib,Pickle. \r  \r \t  This project is made in Machine Learning using python. It identifies a valid user in front of a webcam and shows his name on screen. It marks Unknown to Invalid users. Libraries used are pandas, Numpy, sklearn, Opencv. \r  \r   \r  \r   \r   \r  \r Algorithms used are PCA, Logistic regression, SVM. \r  \r 2.\t  Project : Gender Classification \r \t  Environment : Python,Machine Learning,KNN,PCA,Adaboost,OpenCV,Scikit learn ,Numpy,Random Forest. \r  \r \t  This project is made in Machine Learning using python. It identifies Gender of the user in front of the webcam and shows its gender on screen. Libraries used are pandas, Numpy, sklearn, Opencv. Algorithms used are PCA, Adaboost, Logistic regression, KNN. \r  \r 3.\t  Project : Reading Text From Image (OCR) \r \t  Environment : Python, pytesserect. \r  \r \t  This project is made in python. It reads the text from image using pytesserect library.It is used for creating dataset of documents just by clicking image of document. \r  \r 4.\t  Project : Automation \r \t  Environment : Python, beautiful soup, selenium, chrome driver. \r  \r \t  This project is made in python using selenium and beautifulsoup. It takes us to the desired location automatically using selenium and then extracts required data using beautifulsoup. \r  \r 5.\t  Project : Analytics \r \t  Environment : Python, pandas, numpy. \r  \r \t  This project is made in python using pandas and numpy library. It is used to derive an analytical solution from a bank statement of the customer. \r  \r 6.\t  Project : Scrapping \r \t  Environment : Python, selenium, beautiful soup, Flask rest plus API. \r  \r \t  This project is made in python using selenium and beautiful soup. In this project data is collected from multiple search engines such as Yahoo, Bing, and dark web based on client requirement. and made rest plus Flask \r API for that. \r  \r 7.\t  Project : Breach Data base services \r \t  Environment : Python, elastic search, Flask rest plus API. \r  \r This project is made in python using Flask rest plus API. It is used to quickly search for desired data in big data. \r  \r 8.\t  Project : Domain Name Services (DNS) \r \t  Environment : Python, DNS libraries, Flask rest plus API. \r  \r \t  This project is made in python using Flask rest plus API and DNS libraries. It is used to drive all related data related to any specific domain or IP. Such as address, host, port, phone no, IP, website hosted, etc. \r  \r   \r   \r  \r   \r   \r  \r   \r   \r  \r   \r   \r  \r   \r   \r  \r   \r   \r  \r 9.\t  Project : Employee Monitoring \r \t  Environment : Python 3.7 , Django. \r  \r \t  This project is made in python using libraries such as pyscreenshot, browserhistory, pyAesCrypt, psutil, pandas. It takes a screenshot after every 15 min and stores it on the server and also collects the maximum web page visited by the user and its count, what processes are currently running in the system and also the keystrokes of the user. \r  \r ROLE and RESPONSIBILITIES HANDLED \r \t  \u2022\t  Coding in Python for all the projects. \r \t  \u2022\t  Data analysis and Data manipulation. \r \t  \u2022\t  Decision making for the flow of projects. \r \t  \u2022\t  Maintaining coding standard.", "SegregatedExperience": [{"Employer": {"EmployerName": "Ducat", "FormattedName": "", "ConfidenceScore": 0}, "JobProfile": {"Title": "Python Developer.", "FormattedName": "Python Developer", "Alias": "Application Developer - Python, Backend Python Developer, Core python developer, Developer of Python, Developer Python, Engineer Python, Engineer-python, freelance programmer python, Freelance Python Developer, Freelance Python Engineer, Freelance Python Programmer, Full stack python developer, Full Stack-Python Developer, fullstack python developer, python api developer, Python Backend Developer, Python Backend Development Engineer, Python Backend Web Developer, Python Content Developer, Python Engineer, python freelance developer, Python Full Stack Developer, Python Full Stack Engineer, Python Microservices Developer, Python Ml Developer, Python Nlp Developer, Python Programmer, Python Software Developer, Python software engineer, Python Specialist, Python Test Developer, Python UI Developer, Python Web Developer, Software developer python, software engineer python, web developer python", "RelatedSkills": [{"Skill": "Matplotlib", "ProficiencyLevel": "Native"}, {"Skill": "Stackless Python", "ProficiencyLevel": "Native"}, {"Skill": "KDevelop", "ProficiencyLevel": "Proficient"}, {"Skill": "IronPython", "ProficiencyLevel": "Native"}, {"Skill": "PyCharm", "ProficiencyLevel": "Native"}, {"Skill": "Pymel", "ProficiencyLevel": "Proficient"}, {"Skill": "Hscript", "ProficiencyLevel": "Proficient"}, {"Skill": "Openpyxl", "ProficiencyLevel": "Native"}, {"Skill": "PyGTK", "ProficiencyLevel": "Proficient"}, {"Skill": "Python", "ProficiencyLevel": "Native"}, {"Skill": "IDLE", "ProficiencyLevel": "Native"}, {"Skill": "Bottle Web framework", "ProficiencyLevel": "Native"}, {"Skill": "OpenMDAO", "ProficiencyLevel": "Proficient"}, {"Skill": "PostgreSQL", "ProficiencyLevel": "Proficient"}, {"Skill": "SQLAlchemy", "ProficiencyLevel": "Native"}, {"Skill": "Keras", "ProficiencyLevel": "Proficient"}, {"Skill": "PyMC", "ProficiencyLevel": "Proficient"}, {"Skill": "Cython", "ProficiencyLevel": "Native"}, {"Skill": "zlib", "ProficiencyLevel": "Proficient"}, {"Skill": "PyScripter", "ProficiencyLevel": "Proficient"}, {"Skill": "Grok Software", "ProficiencyLevel": "Proficient"}, {"Skill": "Click Python Package", "ProficiencyLevel": "Proficient"}, {"Skill": "Jinja", "ProficiencyLevel": "Native"}, {"Skill": "pandas", "ProficiencyLevel": "Native"}, {"Skill": "Robot Framework", "ProficiencyLevel": "Proficient"}, {"Skill": "Python Script", "ProficiencyLevel": "Native"}, {"Skill": "Beautiful Soup", "ProficiencyLevel": "Proficient"}, {"Skill": "Theano", "ProficiencyLevel": "Native"}, {"Skill": "Python Tools For Visual Studio", "ProficiencyLevel": "Native"}, {"Skill": "Werkzeug", "ProficiencyLevel": "Native"}, {"Skill": "Stanis Python Editor", "ProficiencyLevel": "Native"}, {"Skill": "Apache Libcloud", "ProficiencyLevel": "Proficient"}, {"Skill": "Web Server Gateway Interface", "ProficiencyLevel": "Native"}, {"Skill": "Folium", "ProficiencyLevel": "Native"}, {"Skill": "Content Filtering", "ProficiencyLevel": "Proficient"}, {"Skill": "ActivePython", "ProficiencyLevel": "Native"}], "ConfidenceScore": 0}, "Location": {"City": "Noida", "State": "Uttar Pradesh", "StateIsoCode": "IN-UP", "Country": "India", "CountryCode": {"IsoAlpha2": "IN", "IsoAlpha3": "IND", "UNCode": "356"}}, "JobPeriod": "", "FormattedJobPeriod": "", "StartDate": "", "EndDate": "", "IsCurrentEmployer": "false", "JobDescription": "\u2022 \t training in JAVA Core from Techlive Solution, Mohali \n \n ACCOMPLISHED PROJECTS \n 1.\t Project : Face Recognition \n \t Environment : Python, Machine Learning, SVM, PCA, Logistic Regression, OpenCV, Scikit Learn, Numpy, \n MatplotLib, Pickle. \n \n \t This project is made in Machine Learning using python. It identifies a valid user in front of a webcam and shows his name on screen. It marks Unknown to Invalid users. Libraries used are pandas, Numpy, sklearn, Opencv. \n \n \n \n \n \n \n Algorithms used are PCA, Logistic regression, SVM. \n \n 2.\t Project : Gender Classification \n \t Environment : Python, Machine Learning, KNN, PCA, Adaboost, OpenCV, Scikit learn, Numpy, Random Forest. \n \n \t This project is made in Machine Learning using python. It identifies Gender of the user in front of the webcam and shows its gender on screen. Libraries used are pandas, Numpy, sklearn, Opencv. Algorithms used are PCA, Adaboost, Logistic regression, KNN. \n \n 3.\t Project : Reading Text From Image (OCR) \n \t Environment : Python, pytesserect. \n \n \t This project is made in python. It reads the text from image using pytesserect library.It is used for creating dataset of documents just by clicking image of document. \n \n 4.\t Project : Automation \n \t Environment : Python, beautiful soup, selenium, chrome driver. \n \n \t This project is made in python using selenium and beautifulsoup. It takes us to the desired location automatically using selenium and then extracts required data using beautifulsoup. \n \n 5.\t Project : Analytics \n \t Environment : Python, pandas, numpy. \n \n \t This project is made in python using pandas and numpy library. It is used to derive an analytical solution from a bank statement of the customer. \n \n 6.\t Project : Scrapping \n \t Environment : Python, selenium, beautiful soup, Flask rest plus API. \n \n \t This project is made in python using selenium and beautiful soup. In this project data is collected from multiple search engines such as Yahoo, Bing, and dark web based on client requirement. and made rest plus Flask \n API for that. \n \n 7.\t Project : Breach Data base services \n \t Environment : Python, elastic search, Flask rest plus API. \n \n This project is made in python using Flask rest plus API. It is used to quickly search for desired data in big data. \n \n 8.\t Project : Domain Name Services (DNS) \n \t Environment : Python, DNS libraries, Flask rest plus API. \n \n \t This project is made in python using Flask rest plus API and DNS libraries. It is used to drive all related data related to any specific domain or IP. Such as address, host, port, phone no, IP, website hosted, etc. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 9.\t Project : Employee Monitoring \n \t Environment : Python 3.7, Django. \n \n \t This project is made in python using libraries such as pyscreenshot, browserhistory, pyAesCrypt, psutil, pandas. It takes a screenshot after every 15 min and stores it on the server and also collects the maximum web page visited by the user and its count, what processes are currently running in the system and also the keystrokes of the user. \n \n ROLE AND RESPONSIBILITIES HANDLED \n \t \u2022 \t Coding in Python for all the projects. \n \t \u2022 \t Data analysis and Data manipulation. \n \t \u2022 \t Decision making for the flow of projects. \n \t \u2022 \t Maintaining coding standard.", "Projects": [{"UsedSkills": "Python,Machine Learning,SVM,PCA,Logistic Regression,OpenCV,Scikit Learn, Numpy,", "ProjectName": "Face Recognition", "TeamSize": ""}, {"UsedSkills": "Python,Machine Learning,KNN,PCA,Adaboost,OpenCV,Scikit learn ,Numpy,Random Forest.", "ProjectName": "Gender Classification", "TeamSize": ""}, {"UsedSkills": "Python, pytesserect.", "ProjectName": "Reading Text From Image (OCR)", "TeamSize": ""}, {"UsedSkills": "Python, beautiful soup, selenium, chrome driver.", "ProjectName": "Automation", "TeamSize": ""}, {"UsedSkills": "Python, pandas, numpy.", "ProjectName": "Analytics", "TeamSize": ""}, {"UsedSkills": "Python, selenium, beautiful soup, Flask rest plus API.", "ProjectName": "Scrapping", "TeamSize": ""}, {"UsedSkills": "Python, elastic search, Flask rest plus API.", "ProjectName": "Breach Data base services", "TeamSize": ""}, {"UsedSkills": "Python, DNS libraries, Flask rest plus API.", "ProjectName": "Domain  Services (DNS)", "TeamSize": ""}, {"UsedSkills": "Python 3.7 , Django.", "ProjectName": "Employee Monitoring", "TeamSize": ""}]}], "CurrentEmployer": "Ducat", "JobProfile": "Python Developer.", "WorkedPeriod": {"TotalExperienceInMonths": "", "TotalExperienceInYear": "", "TotalExperienceRange": ""}, "GapPeriod": "", "AverageStay": "", "LongestStay": "", "Summary": "\u2022\t  Have used Pandas and Numpy for data analysis, data manipulation and data preparation. \r \u2022\t  Have used Selenium with python to automatically run websites for testing and scrapping. \r \u2022\t  Have used Scikit Learn framework for Model Training, Model Analysis and improving Model Performance. \r \u2022\t  Have used libraries such as pytesseract, opencv, pandas, selenium, etc. \r \u2022\t  Have used various Machine Learning algorithms such as SVM, PCA, Linear Regression, Logistic Regression, \r \t  KNN, Naive Bayes, Decision Trees, Boosting and Random Forest. \r \u2022\t  Good team worker & team facilitator. Ability to work efficiently even under pressure of deadlines. \r \u2022\t  Proficient with Python and Machine Learning technology. \r \u2022\t  Have implemented Elastic search to make search quicker in big data. \r \u2022\t  Have worked on making pipelines between different micro service projects. \r \u2022\t  Have been worked on two projects using Python and Machine Learning. \r \u2022\t  Have used Git lab for code backup and storage. \r \u2022\t  Have used Flask Rest Plus API for multiple projects. \r \u2022\t  Have used beautiful soup for scrapping tremendous data from different search engines. \r \u2022\t  Have used minio for storing images so that the urls could not be traceable.", "ExecutiveSummary": "PRATHVI has an experience in the domain of 'Information', particularly in the sub-domain of 'Software Developers and Programmers'. The candidate has been working as a Python Developer. at Ducat", "ManagementSummary": "PRATHVI doesn't have any management level experience in the resume.", "Coverletter": "", "Publication": "", "SegregatedPublication": [], "CurrentLocation": [], "PreferredLocation": [], "Availability": "", "Hobbies": "", "Objectives": "", "Achievements": "", "SegregatedAchievement": [], "References": "", "CustomFields": "Parsing Time : 1578ms", "EmailInfo": {"EmailTo": " ", "EmailBody": " ", "EmailReplyTo": " ", "EmailSignature": " ", "EmailFrom": " ", "EmailSubject": " ", "EmailCC": " "}, "Recommendations": [{"PersonName": "", "CompanyName": "", "Relation": "", "PositionTitle": "", "Description": ""}], "DetailResume": "PRATHVI SINGH\n\nYC - 468 ,Anandam NTPC SAS LTD. GREATER NOIDA. prathvi16.ps@gmail.com : 9 837329588.\n\n \t PROFILE SUMMARY\n\u2022\t  Have used Pandas and Numpy for data analysis, data manipulation and data preparation.\n\u2022\t  Have used Selenium with python to automatically run websites for testing and scrapping.\n\u2022\t  Have used Scikit Learn framework for Model Training, Model Analysis and improving Model Performance.\n\u2022\t  Have used libraries such as pytesseract, opencv, pandas, selenium, etc.\n\u2022\t  Have used various Machine Learning algorithms such as SVM, PCA, Linear Regression, Logistic Regression,\n\t  KNN, Naive Bayes, Decision Trees, Boosting and Random Forest.\n\u2022\t  Good team worker & team facilitator. Ability to work efficiently even under pressure of deadlines.\n\u2022\t  Proficient with Python and Machine Learning technology.\n\u2022\t  Have implemented Elastic search to make search quicker in big data.\n\u2022\t  Have worked on making pipelines between different micro service projects.\n\u2022\t  Have been worked on two projects using Python and Machine Learning.\n\u2022\t  Have used Git lab for code backup and storage.\n\u2022\t  Have used Flask Rest Plus API for multiple projects.\n\u2022\t  Have used beautiful soup for scrapping tremendous data from different search engines.\n\u2022\t  Have used minio for storing images so that the urls could not be traceable.\n\nTECHNICAL SKILLS\nPLATFORMS AND TOOLS\n\n\u2022 PROGRAMMING LANGUAGES\n\u2022 WEB TECHNOLOGIES\n\u2022 FRAME WORK\n\u2022 IDE\n\nEXPERIENCE\n\n : PYTHON, JAVA.\n : HTML, CSS, JAVA SCRIPT.\n : ANACONDA, DJANGO, OPENCV, SCIKIT LEARN, FLASK REST PLUS.\n : IDLE, JUPYTER NOTEBOOK, PYCHARM, ATOM.\n\n\u2022\t  1.9 years job at SecNinjaz as Python Developer.\n\u2022\t  6 month job at Aadrila Technologies as Python Developer.\n\u2022\t  6 months industrial training on Python and Machine Learning from Ducat, Noida.\n\u2022\t  3 month training in JAVA Core from Techlive Solution, Mohali\n\nACCOMPLISHED PROJECTS\n1.\t  Project : Face Recognition\n\t  Environment : Python,Machine Learning,SVM,PCA,Logistic Regression,OpenCV,Scikit Learn, Numpy,\nMatplotLib,Pickle.\n\n\t  This project is made in Machine Learning using python. It identifies a valid user in front of a webcam and shows his name on screen. It marks Unknown to Invalid users. Libraries used are pandas, Numpy, sklearn, Opencv.\n\n \n\n \n \n\nAlgorithms used are PCA, Logistic regression, SVM.\n\n2.\t  Project : Gender Classification\n\t  Environment : Python,Machine Learning,KNN,PCA,Adaboost,OpenCV,Scikit learn ,Numpy,Random Forest.\n\n\t  This project is made in Machine Learning using python. It identifies Gender of the user in front of the webcam and shows its gender on screen. Libraries used are pandas, Numpy, sklearn, Opencv. Algorithms used are PCA, Adaboost, Logistic regression, KNN.\n\n3.\t  Project : Reading Text From Image (OCR) \n\t  Environment : Python, pytesserect.\n\n\t  This project is made in python. It reads the text from image using pytesserect library.It is used for creating dataset of documents just by clicking image of document.\n\n4.\t  Project : Automation\n\t  Environment : Python, beautiful soup, selenium, chrome driver.\n\n\t  This project is made in python using selenium and beautifulsoup. It takes us to the desired location automatically using selenium and then extracts required data using beautifulsoup.\n\n5.\t  Project : Analytics\n\t  Environment : Python, pandas, numpy.\n\n\t  This project is made in python using pandas and numpy library. It is used to derive an analytical solution from a bank statement of the customer.\n\n6.\t  Project : Scrapping\n\t  Environment : Python, selenium, beautiful soup, Flask rest plus API.\n\n\t  This project is made in python using selenium and beautiful soup. In this project data is collected from multiple search engines such as Yahoo, Bing, and dark web based on client requirement. And made rest plus Flask\nAPI for that.\n\n7.\t  Project : Breach Data base services\n\t  Environment : Python, elastic search, Flask rest plus API.\n\nThis project is made in python using Flask rest plus API. It is used to quickly search for desired data in big data.\n\n8.\t  Project : Domain Name Services (DNS) \n\t  Environment : Python, DNS libraries, Flask rest plus API.\n\n\t  This project is made in python using Flask rest plus API and DNS libraries. It is used to drive all related data related to any specific domain or IP. Such as address, host, port, phone no, IP, website hosted, etc.\n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n9.\t  Project : Employee Monitoring\n\t  Environment : Python 3.7 , Django.\n\n\t  This project is made in python using libraries such as pyscreenshot, browserhistory, pyAesCrypt, psutil, pandas. It takes a screenshot after every 15 min and stores it on the server and also collects the maximum web page visited by the user and its count, what processes are currently running in the system and also the keystrokes of the user.\n\nROLE AND RESPONSIBILITIES HANDLED\n\t  \u2022\t  Coding in Python for all the projects.\n\t  \u2022\t  Data analysis and Data manipulation.\n\t  \u2022\t  Decision making for the flow of projects.\n\t  \u2022\t  Maintaining coding standard.\n\nEDUCATIONAL QUALIFICATION\n\nPROFESSIONAL EDUCATION\n\nB.Tech (PTU) in CSE \t 75% \t 2018\n\nACADEMIC EDUCATION\n\nDIPLOMA PSBTE) in IT \t 70% \t 2015\n10TH (CBSE) \t 68% \t 2010\n\nPERSONAL INFORMATION\n\nDate of Birth : 16th June 1993\nMarital status : Single\nSex : Male\nNationality : Indian\nLanguage Proficiency : Hindi, English\n\nPERSONAL Detail : \n \nPRATHVI SINGH\n\n \n \n\n  \t  \n\nAnnotations : \nmailto : prathvi16.ps@gmail.com", "HtmlResume": "<html><body>PRATHVI SINGH<br/><br/>YC - 468,Anandam NTPC SAS LTD. GREATER NOIDA. prathvi16.ps@gmail.com \u00a0 \u00a0 : 9 \u00a0837329588.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0PROFILE SUMMARY<br/>\u2022 \u00a0 Have used Pandas and Numpy for data analysis, data manipulation and data preparation.<br/>\u2022 \u00a0 Have used Selenium with python to automatically run websites for testing and scrapping.<br/>\u2022 \u00a0 Have used Scikit Learn framework for Model Training, Model Analysis and improving Model Performance.<br/>\u2022 \u00a0 Have used libraries such as pytesseract, opencv, pandas, selenium, etc.<br/>\u2022 \u00a0 Have used various Machine Learning algorithms such as SVM, PCA, Linear Regression, Logistic Regression,<br/> \u00a0 \u00a0 \u00a0 \u00a0KNN, Naive Bayes, Decision Trees, Boosting and Random Forest.<br/>\u2022 \u00a0 Good team worker & team facilitator. Ability to work efficiently even under pressure of deadlines.<br/>\u2022 \u00a0 Proficient with Python and Machine Learning technology.<br/>\u2022 \u00a0 Have implemented Elastic search to make search quicker in big data.<br/>\u2022 \u00a0 Have worked on making pipelines between different micro service projects.<br/>\u2022 \u00a0 Have been worked on two projects using Python and Machine Learning.<br/>\u2022 \u00a0 Have used Git lab for code backup and storage.<br/>\u2022 \u00a0 Have used Flask Rest Plus API for multiple projects.<br/>\u2022 \u00a0 Have used beautiful soup for scrapping tremendous data from different search engines.<br/>\u2022 \u00a0 Have used minio for storing images so that the urls could not be traceable.<br/><br/>TECHNICAL SKILLS<br/>PLATFORMS AND TOOLS<br/><br/>\u2022 \u00a0 PROGRAMMING LANGUAGES<br/>\u2022 \u00a0 WEB \u00a0 TECHNOLOGIES<br/>\u2022 \u00a0 FRAME WORK<br/>\u2022 \u00a0 IDE<br/><br/>EXPERIENCE<br/><br/>: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PYTHON, JAVA.<br/>: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HTML, CSS, JAVA SCRIPT.<br/>: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ANACONDA, DJANGO, OPENCV, SCIKIT LEARN, FLASK REST PLUS.<br/>: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 IDLE, JUPYTER NOTEBOOK, PYCHARM, ATOM.<br/><br/>\u2022 \u00a0 1.9 years job at SecNinjaz as Python Developer.<br/>\u2022 \u00a0 6 month job at Aadrila Technologies as Python Developer.<br/>\u2022 \u00a0 6 months industrial training on Python and Machine Learning from Ducat, Noida.<br/>\u2022 \u00a0 3 month training in JAVA Core from Techlive Solution, Mohali<br/><br/>ACCOMPLISHED PROJECTS<br/>1. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Face Recognition<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python,Machine Learning,SVM,PCA,Logistic Regression,OpenCV,Scikit Learn, Numpy,<br/>MatplotLib,Pickle.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0This project is made in Machine Learning using python. It identifies a valid user in front of a webcam and<br/>shows his name on screen. It marks Unknown to Invalid users. Libraries used are pandas, Numpy, sklearn, Opencv.<br/><br/> <br/><br/> <br/> <br/><br/>Algorithms used are PCA, Logistic regression, SVM.<br/><br/>2. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Gender Classification<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python,Machine Learning,KNN,PCA,Adaboost,OpenCV,Scikit learn ,Numpy,Random Forest.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in Machine Learning using python. It identifies Gender of the user in front of the<br/>webcam and shows its gender on screen. Libraries used are pandas, Numpy, sklearn, Opencv. Algorithms used<br/>are PCA, Adaboost, Logistic regression, KNN.<br/><br/>3. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Reading Text From Image (OCR) <br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, pytesserect.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python. It reads the text from image using pytesserect library.It is used for creating<br/>dataset of documents just by clicking image of document.<br/><br/>4. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Automation<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, beautiful soup, selenium, chrome driver.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python using selenium and beautifulsoup. It takes us to the desired location<br/>automatically using selenium and then extracts required data using beautifulsoup.<br/><br/>5. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Analytics<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, pandas, numpy.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python using pandas and numpy library. It is used to derive an analytical solution<br/>from a bank statement of the customer.<br/><br/>6. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Scrapping<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, selenium, beautiful soup, Flask rest plus API.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python using selenium and beautiful soup. In this project data is collected from<br/>multiple search engines such as Yahoo, Bing, and dark web based on client requirement. And made rest plus Flask<br/>API for that.<br/><br/>7. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Breach Data base services<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, elastic search, Flask rest plus API.<br/><br/>This project is made in python using Flask rest plus API. It is used to quickly search for desired data in big<br/>data.<br/><br/>8. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Domain Name Services (DNS) <br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python, DNS libraries, Flask rest plus API.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python using Flask rest plus API and DNS libraries. It is used to drive all related data<br/>related to any specific domain or IP. Such as address, host, port, phone no, IP, website hosted, etc.<br/><br/> <br/> <br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<br/> <br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<br/> <br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<br/> <br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<br/> <br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<br/> <br/><br/>9. \u00a0 \u00a0 \u00a0 \u00a0 Project: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Employee Monitoring<br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Environment: \u00a0 Python 3.7, Django.<br/><br/> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 This project is made in python using libraries such as pyscreenshot, browserhistory, pyAesCrypt, psutil,<br/>pandas. It takes a screenshot after every 15 min and stores it on the server and also collects the maximum web<br/>page visited by the user and its count, what processes are currently running in the system and also the keystrokes<br/>of the user.<br/><br/>ROLE AND RESPONSIBILITIES HANDLED<br/> \u00a0 \u00a0 \u00a0 \u00a0\u2022 \u00a0 Coding in Python for all the projects.<br/> \u00a0 \u00a0 \u00a0 \u00a0\u2022 \u00a0 Data analysis and Data manipulation.<br/> \u00a0 \u00a0 \u00a0 \u00a0\u2022 \u00a0 Decision making for the flow of projects.<br/> \u00a0 \u00a0 \u00a0 \u00a0\u2022 \u00a0 Maintaining coding standard.<br/><br/>EDUCATIONAL QUALIFICATION<br/><br/>PROFESSIONAL EDUCATION<br/><br/>B.Tech (PTU) in CSE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 75% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2018<br/><br/>ACADEMIC EDUCATION<br/><br/>Diploma (PSBTE) in IT \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a070% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02015<br/>10TH (CBSE) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 68% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a02010<br/><br/>PERSONAL INFORMATION<br/><br/>Date of Birth \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \u00a0 \u00a0 16th June 1993<br/>Marital status \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \u00a0 \u00a0 Single<br/>Sex \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \u00a0 \u00a0 Male<br/>Nationality \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0: \u00a0 \u00a0 Indian<br/>Language Proficiency \u00a0 \u00a0: \u00a0 \u00a0 Hindi, English<br/><br/>DECLARATION<br/><br/>I hereby declare that the above information is true in the best of my knowledge.<br/><br/>PRATHVI SINGH</body></html>", "CandidateImage": {"CandidateImageData": "", "CandidateImageFormat": ""}, "TemplateOutput": {"TemplateOutputData": "", "TemplateOutputFileName": "Prathvi_Singh.pdf"}, "ApiInfo": {"Metered": "No", "CreditLeft": "2147.0", "AccountExpiryDate": "01/05/2024 07:07:13", "BuildVersion": "8.0.0.2024.04.12"}}}